{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { PollContext } from '../PollContext';\nimport { capitalize, formatTime, removeLS } from '../helpers.js';\nimport PollService from '../poll.service.js';\nimport ShareLink from '../components/ShareLink';\nimport Option from '../components/Option';\nimport Error from '../components/Error';\nimport CountDown from '../components/CountDown';\nimport '../styles/poll.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollContainer() {\n  _s();\n\n  var _pollValue$options;\n\n  const {\n    loggedIn,\n    poll,\n    error\n  } = useContext(PollContext);\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n  const [votingError, setVotingError] = error;\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const voteHandler = optionId => {\n    try {\n      PollService.castVote(pollValue._id, optionId).then(data => {\n        setPollValue({ ...pollValue,\n          options: data === null || data === void 0 ? void 0 : data.updatedOptions\n        });\n      }).catch(err => {\n        setVotingError({\n          error: true,\n          message: err.message\n        });\n      });\n    } catch (err) {\n      setVotingError({\n        error: true,\n        message: err.message\n      });\n    } finally {\n      navigate('/results/' + pollValue._id);\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then(data => {\n        setPollValue(data.poll);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pollContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", pollValue.subject && capitalize(pollValue.subject), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountDown, {\n      props: {\n        value: pollValue === null || pollValue === void 0 ? void 0 : pollValue.expires,\n        removeLS: removeLS\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: pollValue === null || pollValue === void 0 ? void 0 : (_pollValue$options = pollValue.options) === null || _pollValue$options === void 0 ? void 0 : _pollValue$options.map(opt => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          props: {\n            option: opt,\n            voteHandler: voteHandler\n          }\n        }, opt._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShareLink, {\n      props: {\n        shareLink: `${window.location.origin}/poll/${pollValue._id}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollContainer, \"91TK36GGDKsI+PnsJZRxdsgcyvo=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = PollContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollContainer\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js"],"names":["useState","useContext","useEffect","useNavigate","useParams","PollContext","capitalize","formatTime","removeLS","PollService","ShareLink","Option","Error","CountDown","PollContainer","loggedIn","poll","error","isLoggedIn","setLoggedIn","pollValue","setPollValue","votingError","setVotingError","params","navigate","voteHandler","optionId","castVote","_id","then","data","options","updatedOptions","catch","err","message","Object","keys","length","getPoll","id","subject","value","expires","map","opt","option","shareLink","window","location","origin"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useParams } from 'react-router-dom'\n\nimport { PollContext } from '../PollContext'\nimport { capitalize, formatTime, removeLS } from '../helpers.js'\n\nimport PollService from '../poll.service.js'\nimport ShareLink from '../components/ShareLink'\nimport Option from '../components/Option'\nimport Error from '../components/Error'\nimport CountDown from '../components/CountDown'\n\nimport '../styles/poll.css'\n\n\nexport default function PollContainer(){\n  const { loggedIn, poll, error } = useContext(PollContext)\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n  const [votingError, setVotingError] = error;\n\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const voteHandler = (optionId) => {\n    try {\n      PollService.castVote(pollValue._id,optionId).then((data)=> {\n        setPollValue({...pollValue, options: data?.updatedOptions});\n      }).catch((err)=>{\n        setVotingError({error: true, message: err.message})\n      })\n    } catch (err) {\n      setVotingError({error: true, message: err.message})\n    } finally {\n      navigate('/results/' + pollValue._id)\n    }\n  }\n\n  useEffect(()=>{\n    if(Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then((data) => {\n        setPollValue(data.poll)\n      })\n    }\n  },[])\n\n  return(\n    <div className='pollContainer'>\n      <Error />\n      <h1> {pollValue.subject && capitalize(pollValue.subject)} </h1>\n\n      <CountDown props={{value: pollValue?.expires, removeLS: removeLS}}/>\n\n      <div className='options'>\n        {pollValue?.options?.map(opt => {\n          return <Option key={opt._id} props={{option:opt,voteHandler:voteHandler}} />\n        })}\n      </div>\n\n      <ShareLink props={{shareLink: `${window.location.origin}/poll/${pollValue._id}`}}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}