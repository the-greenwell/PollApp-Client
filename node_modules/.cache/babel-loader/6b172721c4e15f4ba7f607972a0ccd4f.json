{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport { PollContext } from '../PollContext';\nimport PollService from '../poll.service.js';\nimport ShareLink from '../components/ShareLink';\nimport Option from '../components/Option';\nimport CountDown from '../components/CountDown';\nimport '../styles/poll.css';\nimport { capitalize, formatTime } from '../helpers.js';\nimport moment from 'moment';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollContainer(_ref) {\n  _s();\n\n  var _pollValue$options;\n\n  let {\n    props\n  } = _ref;\n  const {\n    loggedIn,\n    poll\n  } = useContext(PollContext);\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n  const [timeLeft, setTimeLeft] = useState(formatCountdown());\n  const params = useParams();\n\n  const voteHandler = optionId => {\n    PollService.castVote(params.id, optionId).then(data => {\n      setPollValue({ ...pollValue,\n        options: data.updatedOptions\n      });\n    });\n  };\n\n  const formatCountdown = () => {\n    let diffTime = moment(pollValue.expires).valueOf() - moment().valueOf();\n    let duration = moment.duration(diffTime, 'milliseconds');\n\n    if (duration.milliseconds > 0) {\n      console.log(formatTime(duration.milliseconds));\n    }\n  };\n\n  useEffect(() => {\n    if (Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then(data => {\n        setPollValue(data.poll);\n      });\n    }\n  }, []);\n  useEffect(() => {}, [pollValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pollContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", pollValue.subject && capitalize(pollValue.subject), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountDown, {\n      props: \"EXPIRED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pollOptions\",\n      children: pollValue === null || pollValue === void 0 ? void 0 : (_pollValue$options = pollValue.options) === null || _pollValue$options === void 0 ? void 0 : _pollValue$options.map(opt => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          props: {\n            option: opt,\n            voteHandler: voteHandler\n          }\n        }, opt._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShareLink, {\n      props: {\n        shareLink: `${window.location.origin}/poll/${pollValue._id}`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollContainer, \"hj1gnZA5RVQeEQAZZWuWxCJ5bbw=\", false, function () {\n  return [useParams];\n});\n\n_c = PollContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollContainer\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js"],"names":["useState","useContext","useEffect","PollContext","PollService","ShareLink","Option","CountDown","capitalize","formatTime","moment","useParams","PollContainer","props","loggedIn","poll","isLoggedIn","setLoggedIn","pollValue","setPollValue","timeLeft","setTimeLeft","formatCountdown","params","voteHandler","optionId","castVote","id","then","data","options","updatedOptions","diffTime","expires","valueOf","duration","milliseconds","console","log","Object","keys","length","getPoll","subject","map","opt","option","_id","shareLink","window","location","origin"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport { PollContext } from '../PollContext'\nimport PollService from '../poll.service.js'\nimport ShareLink from '../components/ShareLink'\nimport Option from '../components/Option'\nimport CountDown from '../components/CountDown'\nimport '../styles/poll.css'\n\nimport { capitalize, formatTime } from '../helpers.js'\n\nimport moment from 'moment'\nimport { useParams } from 'react-router-dom'\n\nexport default function PollContainer({props}){\n  const { loggedIn, poll } = useContext(PollContext)\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n  const [timeLeft, setTimeLeft] = useState(formatCountdown())\n\n  const params = useParams();\n\n  const voteHandler = (optionId) => {\n    PollService.castVote(params.id,optionId).then((data)=>{\n      setPollValue({...pollValue, options: data.updatedOptions})\n    })\n  }\n\n  const formatCountdown = () => {\n    let diffTime = moment(pollValue.expires).valueOf() - moment().valueOf()\n    let duration = moment.duration(diffTime, 'milliseconds')\n    if(duration.milliseconds > 0) {\n      console.log(formatTime(duration.milliseconds))\n    }\n  }\n\n  useEffect(()=>{\n    if(Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then((data) => {\n        setPollValue(data.poll)\n      })\n    }\n  },[])\n\n  useEffect(()=>{\n  },[pollValue])\n\n  return(\n    <div className='pollContainer'>\n      <h1> {pollValue.subject && capitalize(pollValue.subject)} </h1>\n\n      <CountDown props='EXPIRED'/>\n\n      <div className='pollOptions'>\n        {pollValue?.options?.map(opt => {\n          return <Option key={opt._id} props={{option:opt,voteHandler:voteHandler}} />\n        })}\n      </div>\n\n      <ShareLink props={{shareLink: `${window.location.origin}/poll/${pollValue._id}`}}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}