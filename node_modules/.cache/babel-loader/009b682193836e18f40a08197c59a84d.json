{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/components/Input.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Input(_ref) {\n  let {\n    props,\n    handleChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.name,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"is-invalid\",\n      type: props.type,\n      name: props.name,\n      autoFocus: props.focus,\n      min: props.min,\n      max: props.max,\n      onChange: handleChange(props.name)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/components/Input.js"],"names":["Input","props","handleChange","name","label","type","focus","min","max"],"mappings":";;AAAA,eAAe,SAASA,KAAT,OAAuC;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACpD,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAED,KAAK,CAACE,IAAtB;AAAA,gBAA6BF,KAAK,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAA8B,MAAA,IAAI,EAAEH,KAAK,CAACI,IAA1C;AAAgD,MAAA,IAAI,EAAEJ,KAAK,CAACE,IAA5D;AAAkE,MAAA,SAAS,EAAEF,KAAK,CAACK,KAAnF;AAA0F,MAAA,GAAG,EAAEL,KAAK,CAACM,GAArG;AAA0G,MAAA,GAAG,EAAEN,KAAK,CAACO,GAArH;AAA0H,MAAA,QAAQ,EAAEN,YAAY,CAACD,KAAK,CAACE,IAAP;AAAhJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KAPuBH,K","sourcesContent":["export default function Input({ props, handleChange }){\n  return(\n    <div className='input-group'>\n      <label htmlFor={props.name}>{props.label}</label>\n      <input className='is-invalid' type={props.type} name={props.name} autoFocus={props.focus} min={props.min} max={props.max} onChange={handleChange(props.name)}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}