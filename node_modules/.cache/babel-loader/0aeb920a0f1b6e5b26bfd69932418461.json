{"ast":null,"code":"const newPollFields = [{\n  name: \"subject\",\n  label: \"Subject *\",\n  type: \"text\",\n  focus: true\n}, {\n  name: \"password\",\n  label: \"Password\",\n  type: \"password\"\n}, {\n  name: \"confirmPassword\",\n  label: \"Confirm Password\",\n  type: \"password\"\n}, {\n  name: \"expires\",\n  label: \"Closes in... (1 - 300 minutes)\",\n  type: \"number\",\n  min: 1,\n  max: 300\n}, {\n  name: \"format\",\n  label: \"Results Format\",\n  type: \"select\",\n  options: [\"default\", \"bar\", \"pie\", \"radar\"]\n}];\nconst updatePollFields = [{\n  name: \"format\",\n  label: \"Results Format\",\n  type: \"text\"\n}];\n\nconst capitalize = _ref => {\n  let [first, ...rest] = _ref;\n  return first.toLocaleUpperCase() + rest.join('');\n};\n\nconst formatTime = duration => {\n  const milliseconds = Math.floor(duration % 1000 / 100),\n        seconds = Math.floor(duration / 1000 % 60),\n        minutes = Math.floor(duration / (1000 * 60) % 60),\n        hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n  return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n};\n\nmodule.exports = {\n  newPollFields,\n  updatePollFields,\n  capitalize,\n  formatTime\n};","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/helpers.js"],"names":["newPollFields","name","label","type","focus","min","max","options","updatePollFields","capitalize","first","rest","toLocaleUpperCase","join","formatTime","duration","milliseconds","Math","floor","seconds","minutes","hours","module","exports"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CACpB;AAACC,EAAAA,IAAI,EAAE,SAAP;AAAkBC,EAAAA,KAAK,EAAE,WAAzB;AAAsCC,EAAAA,IAAI,EAAE,MAA5C;AAAoDC,EAAAA,KAAK,EAAE;AAA3D,CADoB,EAEpB;AAACH,EAAAA,IAAI,EAAE,UAAP;AAAmBC,EAAAA,KAAK,EAAE,UAA1B;AAAsCC,EAAAA,IAAI,EAAE;AAA5C,CAFoB,EAGpB;AAACF,EAAAA,IAAI,EAAE,iBAAP;AAA0BC,EAAAA,KAAK,EAAE,kBAAjC;AAAqDC,EAAAA,IAAI,EAAE;AAA3D,CAHoB,EAIpB;AAACF,EAAAA,IAAI,EAAE,SAAP;AAAkBC,EAAAA,KAAK,EAAE,gCAAzB;AAA2DC,EAAAA,IAAI,EAAE,QAAjE;AAA2EE,EAAAA,GAAG,EAAE,CAAhF;AAAmFC,EAAAA,GAAG,EAAE;AAAxF,CAJoB,EAKpB;AAACL,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,gBAAxB;AAA0CC,EAAAA,IAAI,EAAE,QAAhD;AAA0DI,EAAAA,OAAO,EAAE,CAAC,SAAD,EAAW,KAAX,EAAiB,KAAjB,EAAuB,OAAvB;AAAnE,CALoB,CAAtB;AAOA,MAAMC,gBAAgB,GAAG,CACvB;AAACP,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,KAAK,EAAE,gBAAxB;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CADuB,CAAzB;;AAGA,MAAMM,UAAU,GAAG,QAAwB;AAAA,MAAvB,CAAEC,KAAF,EAAS,GAAGC,IAAZ,CAAuB;AACzC,SAAOD,KAAK,CAACE,iBAAN,KAA4BD,IAAI,CAACE,IAAL,CAAU,EAAV,CAAnC;AAAiD,CADnD;;AAGA,MAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/B,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAYH,QAAQ,GAAG,IAAZ,GAAoB,GAA/B,CAArB;AAAA,QACII,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,GAAG,IAAZ,GAAoB,EAA/B,CADd;AAAA,QAEIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,EAAtC,CAFd;AAAA,QAGIM,KAAK,GAAGJ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,GAAgC,EAA3C,CAHZ;AAKAM,EAAAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAe,MAAMA,KAArB,GAA6BA,KAArC;AACAD,EAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C;AACAD,EAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C;AAEA,SAAOE,KAAK,GAAG,GAAR,GAAcD,OAAd,GAAwB,GAAxB,GAA8BD,OAA9B,GAAwC,GAAxC,GAA8CH,YAArD;AACD,CAXD;;AAaAM,MAAM,CAACC,OAAP,GAAiB;AAAEvB,EAAAA,aAAF;AAAiBQ,EAAAA,gBAAjB;AAAmCC,EAAAA,UAAnC;AAA+CK,EAAAA;AAA/C,CAAjB","sourcesContent":["const newPollFields = [\n  {name: \"subject\", label: \"Subject *\", type: \"text\", focus: true},\n  {name: \"password\", label: \"Password\", type: \"password\" },\n  {name: \"confirmPassword\", label: \"Confirm Password\", type: \"password\" },\n  {name: \"expires\", label: \"Closes in... (1 - 300 minutes)\", type: \"number\", min: 1, max: 300 },\n  {name: \"format\", label: \"Results Format\", type: \"select\", options: [\"default\",\"bar\",\"pie\",\"radar\"] },]\n\nconst updatePollFields = [\n  {name: \"format\", label: \"Results Format\", type: \"text\" }]\n\nconst capitalize = ([ first, ...rest ]) => {\n  return first.toLocaleUpperCase() + rest.join('')}\n\nconst formatTime = (duration) => {\n  const milliseconds = Math.floor((duration % 1000) / 100),\n      seconds = Math.floor((duration / 1000) % 60),\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\n\n  hours = (hours < 10) ? \"0\" + hours : hours;\n  minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n  seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n  return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n}\n\nmodule.exports = { newPollFields, updatePollFields, capitalize, formatTime }\n"]},"metadata":{},"sourceType":"module"}