{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport { PollContext } from '../PollContext';\nimport PollService from '../poll.service.js';\nimport Option from '../components/Option';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollContainer(_ref) {\n  _s();\n\n  var _pollValue$options;\n\n  let {\n    props\n  } = _ref;\n  const {\n    loggedIn,\n    poll\n  } = useContext(PollContext);\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n  const params = useParams();\n  useEffect(() => {\n    if (Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then(data => {\n        setPollValue(data.poll);\n      });\n    }\n  }, []);\n\n  const voteHandler = e => {\n    console.log(pollValue);\n    console.log(e.target.textContent, params.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pollContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", pollValue === null || pollValue === void 0 ? void 0 : pollValue.subject, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pollOptions\",\n      children: pollValue === null || pollValue === void 0 ? void 0 : (_pollValue$options = pollValue.options) === null || _pollValue$options === void 0 ? void 0 : _pollValue$options.map(opt => {\n        return /*#__PURE__*/_jsxDEV(Option, {\n          props: {\n            poll: opt,\n            voteHandler: voteHandler\n          }\n        }, opt._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PollContainer, \"FSi5A0zbZXov+Iyg5nVUfItcThI=\", false, function () {\n  return [useParams];\n});\n\n_c = PollContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollContainer\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js"],"names":["useState","useContext","useEffect","PollContext","PollService","Option","useParams","PollContainer","props","loggedIn","poll","isLoggedIn","setLoggedIn","pollValue","setPollValue","params","Object","keys","length","getPoll","id","then","data","voteHandler","e","console","log","target","textContent","subject","options","map","opt","_id"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,eAAe,SAASC,aAAT,OAA+B;AAAA;;AAAA;;AAAA,MAAR;AAACC,IAAAA;AAAD,GAAQ;AAC5C,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBT,UAAU,CAACE,WAAD,CAArC;AACA,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BH,QAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BJ,IAAlC;AAEA,QAAMK,MAAM,GAAGT,SAAS,EAAxB;AAEAJ,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGc,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBK,MAAvB,KAAkC,CAArC,EAAwC;AACtCd,MAAAA,WAAW,CAACe,OAAZ,CAAoBJ,MAAM,CAACK,EAA3B,EAA+BC,IAA/B,CAAqCC,IAAD,IAAU;AAC5CR,QAAAA,YAAY,CAACQ,IAAI,CAACZ,IAAN,CAAZ;AACD,OAFD;AAGD;AACF,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMa,WAAW,GAAIC,CAAD,IAAO;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,WAArB,EAAkCb,MAAM,CAACK,EAAzC;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA,sBAAMP,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAEgB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACGhB,SADH,aACGA,SADH,6CACGA,SAAS,CAAEiB,OADd,uDACG,mBAAoBC,GAApB,CAAwBC,GAAG,IAAI;AAC9B,4BAAO,QAAC,MAAD;AAAsB,UAAA,KAAK,EAAE;AAACtB,YAAAA,IAAI,EAACsB,GAAN;AAAUT,YAAAA,WAAW,EAACA;AAAtB;AAA7B,WAAaS,GAAG,CAACC,GAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA9BuB1B,a;UAKPD,S;;;KALOC,a","sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport { PollContext } from '../PollContext'\nimport PollService from '../poll.service.js'\nimport Option from '../components/Option'\nimport { useParams } from 'react-router-dom'\n\nexport default function PollContainer({props}){\n  const { loggedIn, poll } = useContext(PollContext)\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n\n  const params = useParams();\n\n  useEffect(()=>{\n    if(Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then((data) => {\n        setPollValue(data.poll)\n      })\n    }\n  },[])\n\n  const voteHandler = (e) => {\n    console.log(pollValue)\n    console.log(e.target.textContent, params.id)\n  }\n\n  return(\n    <div className='pollContainer'>\n      <h1> {pollValue?.subject} </h1>\n      <div className='pollOptions'>\n        {pollValue?.options?.map(opt => {\n          return <Option key={opt._id} props={{poll:opt,voteHandler:voteHandler}} />\n        })}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}