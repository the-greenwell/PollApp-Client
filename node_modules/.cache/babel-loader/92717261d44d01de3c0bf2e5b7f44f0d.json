{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport '../styles/form.css';\nimport { newPollFields, updatePollFields } from '../helpers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollForm(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [fields, setFields] = useState([]);\n  const [options, setOptionsTotal] = useState(2);\n  useEffect(() => {\n    type === 'newPoll' ? setFields(newPollFields) : setFields(updatePollFields);\n  }, []);\n  useEffect(() => {\n    if (options < 9 && options > 2) {\n      setFields([...fields, {\n        name: `option${options}`,\n        label: `Option ${options}`,\n        type: 'text',\n        focus: true\n      }]);\n    }\n  }, [options]);\n\n  const increaseOptions = async () => {\n    if (options < 9) setOptionsTotal(options + 1);\n  };\n\n  const handleOnChange = e => {\n    const name = e.target.key;\n    console.log(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [type === 'newPoll' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseOptions,\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : '', fields.map(x => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        props: x,\n        handleOnChange: handleOnChange\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PollForm, \"9XL4BJjnPi+nsw1wl4xp1R2zePQ=\");\n\n_c = PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js"],"names":["useState","useEffect","Input","newPollFields","updatePollFields","PollForm","type","fields","setFields","options","setOptionsTotal","name","label","focus","increaseOptions","handleOnChange","e","target","key","console","log","map","x"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,oBAAP;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,eAAhD;;AAEA,eAAe,SAASC,QAAT,OAA2B;AAAA;;AAAA,MAAT;AAAEC,IAAAA;AAAF,GAAS;AACtC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACS,OAAD,EAASC,eAAT,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,IAAI,KAAK,SAAT,GACIE,SAAS,CAACL,aAAD,CADb,GAC+BK,SAAS,CAACJ,gBAAD,CADxC;AAEC,GAHM,EAGL,EAHK,CAAT;AAKAH,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGQ,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,CAA5B,EAA8B;AAC5BD,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAW;AAACI,QAAAA,IAAI,EAAE,SAAQF,OAAQ,EAAvB;AAAyBG,QAAAA,KAAK,EAAG,UAASH,OAAQ,EAAlD;AAAqDH,QAAAA,IAAI,EAAE,MAA3D;AAAmEO,QAAAA,KAAK,EAAE;AAA1E,OAAX,CAAD,CAAT;AACD;AACF,GAJQ,EAIP,CAACJ,OAAD,CAJO,CAAT;;AAMA,QAAMK,eAAe,GAAG,YAAY;AAClC,QAAGL,OAAO,GAAG,CAAb,EAAgBC,eAAe,CAACD,OAAO,GAAG,CAAX,CAAf;AACjB,GAFD;;AAIA,QAAMM,cAAc,GAAIC,CAAD,IAAO;AAC5B,UAAML,IAAI,GAAGK,CAAC,CAACC,MAAF,CAASC,GAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACIL,IAAI,KAAK,SAAT,gBACA;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEQ,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,GAIE,EALN,EAMGP,MAAM,CAACc,GAAP,CAAWC,CAAC,IAAI;AACf,0BAAQ,QAAC,KAAD;AAAoB,QAAA,KAAK,EAAEA,CAA3B;AAA8B,QAAA,cAAc,EAAEP;AAA9C,SAAYO,CAAC,CAACX,IAAd;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYH;;GArCuBN,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport '../styles/form.css'\nimport { newPollFields, updatePollFields } from '../helpers.js'\n\nexport default function PollForm({ type }){\n    const [fields,setFields] = useState([]);\n    const [options,setOptionsTotal] = useState(2);\n\n    useEffect(()=>{\n      type === 'newPoll' ?\n          setFields(newPollFields) : setFields(updatePollFields)\n      },[])\n\n    useEffect(()=> {\n      if(options < 9 && options > 2){\n        setFields([...fields,{name:`option${options}`,label: `Option ${options}`, type: 'text', focus: true}])\n      }\n    },[options])\n\n    const increaseOptions = async () => {\n      if(options < 9) setOptionsTotal(options + 1)\n    }\n\n    const handleOnChange = (e) => {\n      const name = e.target.key\n      console.log(name)\n    }\n\n\n    return(\n      <div className='form'>\n        { type === 'newPoll'  ?  (\n          <span>\n            <button onClick={increaseOptions}>Add Option</button>\n          </span>\n        ) : ''}\n        {fields.map(x => {\n          return (<Input key={x.name} props={x} handleOnChange={handleOnChange} />)\n        })}\n      </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}