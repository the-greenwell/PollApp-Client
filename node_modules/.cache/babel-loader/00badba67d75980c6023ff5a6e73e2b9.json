{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Select from './Select';\nimport Input from './Input';\nimport '../styles/form.css';\nimport { newPollFields, updatePollFields } from '../helpers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PollForm(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [fields, setFields] = useState([]);\n  const [options, setOptionsTotal] = useState(2);\n  useEffect(() => {\n    type === 'newPoll' ? setFields(newPollFields) : setFields(updatePollFields);\n  }, []);\n  useEffect(() => {\n    if (options < 9 && options > 2) {\n      setFields([...fields, {\n        type: 'text',\n        focus: true,\n        name: `option${options}`,\n        label: `Option ${options}`\n      }]);\n    }\n  }, [options]);\n  useEffect(() => {\n    console.log(formData);\n  }, [formData]);\n\n  const increaseOptions = async () => {\n    if (options < 9) setOptionsTotal(options + 1);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [type === 'newPoll' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseOptions,\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this) : '', fields.map(x => {\n      return x.type === 'select' ? /*#__PURE__*/_jsxDEV(Select, {\n        props: x,\n        handleChange: handleChange\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Input, {\n        props: x,\n        handleChange: handleChange\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PollForm, \"tVDTVdPsa1DFpd7uN6YlBDLqqJM=\");\n\n_c = PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js"],"names":["useState","useEffect","Select","Input","newPollFields","updatePollFields","PollForm","type","fields","setFields","options","setOptionsTotal","focus","name","label","console","log","formData","increaseOptions","handleChange","e","value","target","setFormData","map","x"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,oBAAP;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,eAAhD;;AAEA,eAAe,SAASC,QAAT,OAA2B;AAAA;;AAAA,MAAT;AAAEC,IAAAA;AAAF,GAAS;AACtC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACU,OAAD,EAASC,eAAT,IAA4BX,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZM,IAAAA,IAAI,KAAK,SAAT,GACIE,SAAS,CAACL,aAAD,CADb,GAC+BK,SAAS,CAACJ,gBAAD,CADxC;AAEC,GAHM,EAGL,EAHK,CAAT;AAKAJ,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGS,OAAO,GAAG,CAAV,IAAeA,OAAO,GAAG,CAA5B,EAA8B;AAC5BD,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAW;AACnBD,QAAAA,IAAI,EAAE,MADa;AAEnBK,QAAAA,KAAK,EAAE,IAFY;AAGnBC,QAAAA,IAAI,EAAE,SAAQH,OAAQ,EAHH;AAInBI,QAAAA,KAAK,EAAG,UAASJ,OAAQ;AAJN,OAAX,CAAD,CAAT;AAKD;AACF,GARQ,EAQP,CAACA,OAAD,CARO,CAAT;AAUAT,EAAAA,SAAS,CAAC,MAAK;AACbc,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,GAFQ,EAEP,CAACA,QAAD,CAFO,CAAT;;AAIA,QAAMC,eAAe,GAAG,YAAY;AAClC,QAAGR,OAAO,GAAG,CAAb,EAAgBC,eAAe,CAACD,OAAO,GAAG,CAAX,CAAf;AACjB,GAFD;;AAIA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAACP,MAAAA,IAAD;AAAOQ,MAAAA;AAAP,QAAgBD,CAAC,CAACE,MAAxB;AACAC,IAAAA,WAAW,CAAC,EAAC,GAAGN,QAAJ;AAAc,OAACJ,IAAD,GAAQQ;AAAtB,KAAD,CAAX;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACId,IAAI,KAAK,SAAT,gBACA;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEW,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,GAIE,EALN,EAMGV,MAAM,CAACgB,GAAP,CAAWC,CAAC,IAAI;AACf,aACEA,CAAC,CAAClB,IAAF,KAAW,QAAX,gBACE,QAAC,MAAD;AAEE,QAAA,KAAK,EAAEkB,CAFT;AAGE,QAAA,YAAY,EAAEN;AAHhB,SACOM,CAAC,CAACZ,IADT;AAAA;AAAA;AAAA;AAAA,cADF,gBAME,QAAC,KAAD;AAEE,QAAA,KAAK,EAAEY,CAFT;AAGE,QAAA,YAAY,EAAEN;AAHhB,SACOM,CAAC,CAACZ,IADT;AAAA;AAAA;AAAA;AAAA,cAPJ;AAWD,KAZA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBH;;GAvDuBP,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from 'react'\nimport Select from './Select'\nimport Input from './Input'\nimport '../styles/form.css'\nimport { newPollFields, updatePollFields } from '../helpers.js'\n\nexport default function PollForm({ type }){\n    const [fields,setFields] = useState([]);\n    const [options,setOptionsTotal] = useState(2);\n\n    useEffect(()=>{\n      type === 'newPoll' ?\n          setFields(newPollFields) : setFields(updatePollFields)\n      },[])\n\n    useEffect(()=> {\n      if(options < 9 && options > 2){\n        setFields([...fields,{\n          type: 'text',\n          focus: true,\n          name:`option${options}`,\n          label: `Option ${options}`}])\n      }\n    },[options])\n\n    useEffect(()=> {\n      console.log(formData)\n    },[formData])\n\n    const increaseOptions = async () => {\n      if(options < 9) setOptionsTotal(options + 1)\n    }\n\n    const handleChange = (e) => {\n      const {name, value} = e.target\n      setFormData({...formData, [name] :value})\n    }\n\n\n    return(\n      <div className='form'>\n        { type === 'newPoll'  ?  (\n          <span>\n            <button onClick={increaseOptions}>Add Option</button>\n          </span>\n        ) : ''}\n        {fields.map(x => {\n          return (\n            x.type === 'select' ?\n              <Select\n                key={x.name}\n                props={x}\n                handleChange={handleChange} />\n            :\n              <Input\n                key={x.name}\n                props={x}\n                handleChange={handleChange} />)\n        })}\n      </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}