{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/PollContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PollContext = /*#__PURE__*/createContext();\nexport const PollProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [poll, setPoll] = useState({});\n  useEffect(() => {\n    console.log(children);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PollContext.Provider, {\n    value: {\n      loggedIn: [isLoggedIn, setLoggedIn],\n      poll: [poll, setPoll]\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PollProvider, \"OKLpv9BdgIGron8Ogo4H/V544Os=\");\n\n_c = PollProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollProvider\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/PollContext.js"],"names":["React","useEffect","useState","createContext","PollContext","PollProvider","children","isLoggedIn","setLoggedIn","poll","setPoll","console","log","loggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;AAEP,OAAO,MAAME,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,IAAD,EAAMC,OAAN,IAAiBR,QAAQ,CAAC,EAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACO,MAAAA,QAAQ,EAAE,CAACN,UAAD,EAAaC,WAAb,CAAX;AAAsCC,MAAAA,IAAI,EAAE,CAACA,IAAD,EAAMC,OAAN;AAA5C,KAA7B;AAAA,cACIJ;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAbM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState, createContext } from 'react'\n\nexport const PollContext = createContext();\n\nexport const PollProvider = ({ children }) => {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [poll,setPoll] = useState({});\n\n  useEffect(()=>{\n    console.log(children)\n  },[])\n\n  return(\n    <PollContext.Provider value={{loggedIn: [isLoggedIn, setLoggedIn], poll: [poll,setPoll]}}>\n      { children }\n    </PollContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}