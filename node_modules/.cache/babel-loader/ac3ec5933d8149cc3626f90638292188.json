{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PollForm(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [fields, setFields] = useState([]);\n  useEffect(() => {\n    type === 'newPoll' ? setFields([{\n      name: \"subject\",\n      label: \"Subject\",\n      type: \"text\"\n    }, {\n      name: \"author\",\n      label: \"Author\",\n      type: \"text\"\n    }, {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\"\n    }, {\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      type: \"password\"\n    }, {\n      name: \"expires\",\n      label: \"Expires in...\",\n      type: \"time\"\n    }, {\n      name: \"format\",\n      label: \"Results Format\",\n      type: \"text\"\n    }]) : setFields([{\n      name: \"format\",\n      label: \"Results Format\",\n      type: \"text\"\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fields.map(x => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        props: x\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n}\n\n_s(PollForm, \"wvdN/Qe+OYUcmAFD4S0ih5tfRX4=\");\n\n_c = PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js"],"names":["useState","useEffect","Input","PollForm","type","fields","setFields","name","label","map","x"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAGA,eAAe,SAASC,QAAT,OAA2B;AAAA;;AAAA,MAAT;AAAEC,IAAAA;AAAF,GAAS;AACtC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,IAAI,KAAK,SAAT,GACIE,SAAS,CAAC,CACR;AAACC,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,KAAK,EAAE,SAAzB;AAAoCJ,MAAAA,IAAI,EAAE;AAA1C,KADQ,EAER;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,KAAK,EAAE,QAAxB;AAAkCJ,MAAAA,IAAI,EAAE;AAAxC,KAFQ,EAGR;AAACG,MAAAA,IAAI,EAAE,UAAP;AAAmBC,MAAAA,KAAK,EAAE,UAA1B;AAAsCJ,MAAAA,IAAI,EAAE;AAA5C,KAHQ,EAIR;AAACG,MAAAA,IAAI,EAAE,iBAAP;AAA0BC,MAAAA,KAAK,EAAE,kBAAjC;AAAqDJ,MAAAA,IAAI,EAAE;AAA3D,KAJQ,EAKR;AAACG,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,KAAK,EAAE,eAAzB;AAA0CJ,MAAAA,IAAI,EAAE;AAAhD,KALQ,EAMR;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,KAAK,EAAE,gBAAxB;AAA0CJ,MAAAA,IAAI,EAAE;AAAhD,KANQ,CAAD,CADb,GASIE,SAAS,CAAC,CAAC;AAACC,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,KAAK,EAAE,gBAAxB;AAA0CJ,MAAAA,IAAI,EAAE;AAAhD,KAAD,CAAD,CATb;AAUD,GAXQ,EAWP,EAXO,CAAT;AAaE,sBACE;AAAA,cACGC,MAAM,CAACI,GAAP,CAAWC,CAAC,IAAI;AACf,0BAAQ,QAAC,KAAD;AAAoB,QAAA,KAAK,EAAEA;AAA3B,SAAYA,CAAC,CAACH,IAAd;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFA;AADH,mBADF;AAOL;;GAvBuBJ,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\n\n\nexport default function PollForm({ type }){\n    const [fields,setFields] = useState([]);\n\n    useEffect(()=>{\n      type === 'newPoll' ?\n          setFields([\n            {name: \"subject\", label: \"Subject\", type: \"text\" },\n            {name: \"author\", label: \"Author\", type: \"text\" },\n            {name: \"password\", label: \"Password\", type: \"password\" },\n            {name: \"confirmPassword\", label: \"Confirm Password\", type: \"password\" },\n            {name: \"expires\", label: \"Expires in...\", type: \"time\" },\n            {name: \"format\", label: \"Results Format\", type: \"text\" }])\n        :\n          setFields([{name: \"format\", label: \"Results Format\", type: \"text\" }])\n    },[])\n\n      return(\n        <>\n          {fields.map(x => {\n            return (<Input key={x.name} props={x} />)\n          })}\n        </>\n      )\n}\n"]},"metadata":{},"sourceType":"module"}