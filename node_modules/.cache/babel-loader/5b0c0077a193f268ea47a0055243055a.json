{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/containers/ResultsContainer.js\",\n    _s = $RefreshSig$();\n\nimport { capitalize } from '../helpers.js';\nimport { PollContext } from '../PollContext';\nimport PollService from '../poll.service.js';\nimport { useEffect, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/poll.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultsContainer() {\n  _s();\n\n  var _pollValue$options;\n\n  const {\n    loggedIn,\n    poll\n  } = useContext(PollContext);\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(pollValue);\n  }, [pollValue]);\n  useEffect(() => {\n    if (Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then(data => {\n        navigate('/results/' + data.poll._id);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pollContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: pollValue.subject && capitalize(pollValue.subject)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: pollValue === null || pollValue === void 0 ? void 0 : (_pollValue$options = pollValue.options) === null || _pollValue$options === void 0 ? void 0 : _pollValue$options.map(opt => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [opt.description, \": \", opt.votes]\n        }, opt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResultsContainer, \"LKRzXLss9wchJM33Tfag+vT1MDk=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ResultsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultsContainer\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/containers/ResultsContainer.js"],"names":["capitalize","PollContext","PollService","useEffect","useContext","useParams","useNavigate","ResultsContainer","loggedIn","poll","isLoggedIn","setLoggedIn","pollValue","setPollValue","params","navigate","console","log","Object","keys","length","getPoll","id","then","data","_id","subject","options","map","opt","description","votes"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,oBAAP;;AAEA,eAAe,SAASC,gBAAT,GAA2B;AAAA;;AAAA;;AACxC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBL,UAAU,CAACH,WAAD,CAArC;AACA,QAAM,CAACS,UAAD,EAAaC,WAAb,IAA4BH,QAAlC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BJ,IAAlC;AAEA,QAAMK,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACD,GAFQ,EAEP,CAACA,SAAD,CAFO,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGe,MAAM,CAACC,IAAP,CAAYP,SAAZ,EAAuBQ,MAAvB,KAAkC,CAArC,EAAwC;AACtClB,MAAAA,WAAW,CAACmB,OAAZ,CAAoBP,MAAM,CAACQ,EAA3B,EAA+BC,IAA/B,CAAqCC,IAAD,IAAU;AAC5CT,QAAAA,QAAQ,CAAC,cAAYS,IAAI,CAACf,IAAL,CAAUgB,GAAvB,CAAR;AACD,OAFD;AAGD;AACF,GANQ,EAMP,EANO,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA,gBAAKb,SAAS,CAACc,OAAV,IAAqB1B,UAAU,CAACY,SAAS,CAACc,OAAX;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGd,SADH,aACGA,SADH,6CACGA,SAAS,CAAEe,OADd,uDACG,mBAAoBC,GAApB,CAAwBC,GAAG,IAAI;AAC9B,4BAAO;AAAA,qBAAkBA,GAAG,CAACC,WAAtB,QAAqCD,GAAG,CAACE,KAAzC;AAAA,WAAQF,GAAG,CAACJ,GAAZ;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/BuBlB,gB;UAKPF,S,EACEC,W;;;KANKC,gB","sourcesContent":["import { capitalize } from '../helpers.js'\nimport { PollContext } from '../PollContext'\nimport PollService from '../poll.service.js'\n\nimport { useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\n\nimport '../styles/poll.css'\n\nexport default function ResultsContainer(){\n  const { loggedIn, poll } = useContext(PollContext)\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(()=>{\n    console.log(pollValue)\n  },[pollValue])\n\n  useEffect(()=>{\n    if(Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then((data) => {\n        navigate('/results/'+data.poll._id)\n      })\n    }\n  },[])\n\n  return(\n    <div className=\"pollContainer\">\n      <h1>{pollValue.subject && capitalize(pollValue.subject)}</h1>\n\n      <div className='options'>\n        {pollValue?.options?.map(opt => {\n          return <p key={opt._id}>{opt.description}: {opt.votes}</p>\n        })}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}