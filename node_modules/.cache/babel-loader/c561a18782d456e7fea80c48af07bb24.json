{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useForm = options => {\n  _s();\n\n  const [data, setData] = useState((options === null || options === void 0 ? void 0 : options.initialValues) || {});\n  const [pollOpts, setPollOpts] = useState([]);\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (key, sanitizeFn) => e => {\n    const value = sanitizeFn ? sanitizeFn(e.target.value) : e.target.value;\n    key.split('-')[0] === 'option' ? setPollOpts({ ...pollOpts,\n      [key]: value\n    }) : setData({ ...data,\n      [key]: value\n    });\n  };\n\n  const validateOptions = async opts => {};\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('submitted');\n    const validations = options === null || options === void 0 ? void 0 : options.validations;\n\n    if (validations) {\n      let valid = true;\n      const newErrors = {};\n\n      for (const key in validations) {\n        var _validation$required;\n\n        const value = data[key];\n        const validation = validations[key];\n\n        if (validation !== null && validation !== void 0 && (_validation$required = validation.required) !== null && _validation$required !== void 0 && _validation$required.value && !value) {\n          var _validation$required2;\n\n          valid = false;\n          newErrors[key] = validation === null || validation === void 0 ? void 0 : (_validation$required2 = validation.required) === null || _validation$required2 === void 0 ? void 0 : _validation$required2.message;\n        }\n\n        const pattern = validation === null || validation === void 0 ? void 0 : validation.pattern;\n\n        if (pattern !== null && pattern !== void 0 && pattern.value && !RegExp(pattern.value).test(value)) {\n          valid = false;\n          newErrors[key] = pattern.message;\n        }\n\n        const custom = validation === null || validation === void 0 ? void 0 : validation.custom;\n\n        if (custom !== null && custom !== void 0 && custom.value && !custom.isValid(value)) {\n          valid = false;\n          newErrors[key] = custom.message;\n        }\n      }\n\n      if (!valid) {\n        setErrors(newErrors);\n        return;\n      }\n    }\n\n    setErrors({});\n\n    if (options !== null && options !== void 0 && options.onSubmit) {\n      options.onSubmit();\n    }\n  };\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  useEffect(() => {\n    console.log(pollOpts);\n  }, [pollOpts]);\n  return {\n    data,\n    handleChange,\n    handleSubmit,\n    errors\n  };\n};\n\n_s(useForm, \"6C81iV3jv2GZ254iFRHtJqC1na4=\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/useForm.js"],"names":["useState","useEffect","useForm","options","data","setData","initialValues","pollOpts","setPollOpts","errors","setErrors","handleChange","key","sanitizeFn","e","value","target","split","validateOptions","opts","handleSubmit","preventDefault","console","log","validations","valid","newErrors","validation","required","message","pattern","RegExp","test","custom","isValid","onSubmit"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useForm = (options) => {\n  const [data, setData] = useState(options?.initialValues || {});\n  const [pollOpts, setPollOpts] = useState([])\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (\n    key,\n    sanitizeFn,\n  ) => (e) => {\n    const value = sanitizeFn ? sanitizeFn(e.target.value) : e.target.value;\n    key.split('-')[0] === 'option' ?\n    setPollOpts({\n      ...pollOpts,\n      [key]: value\n    })\n    :\n    setData({\n      ...data,\n      [key]: value,\n    });\n  };\n\n  const validateOptions = async (opts) => {\n\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log('submitted')\n    const validations = options?.validations;\n    if(validations){\n      let valid = true;\n      const newErrors = {};\n      for (const key in validations) {\n        const value = data[key];\n        const validation = validations[key];\n\n        if(validation?.required?.value && !value) {\n          valid = false;\n          newErrors[key] = validation?.required?.message;\n        }\n\n        const pattern = validation?.pattern;\n        if(pattern?.value && !RegExp(pattern.value).test(value)){\n          valid = false;\n          newErrors[key] = pattern.message;\n        }\n\n        const custom = validation?.custom;\n        if(custom?.value && !custom.isValid(value)){\n          valid = false;\n          newErrors[key] = custom.message;\n        }\n      }\n\n      if(!valid) {\n        setErrors(newErrors);\n        return\n      }\n\n    }\n\n    setErrors({});\n\n    if(options?.onSubmit) {\n      options.onSubmit();\n    }\n  }\n\n  useEffect(()=>{console.log(data)},[data])\n    useEffect(()=>{console.log(pollOpts)},[pollOpts])\n\n  return {\n    data,\n    handleChange,\n    handleSubmit,\n    errors\n  }\n};\n"]},"metadata":{},"sourceType":"module"}