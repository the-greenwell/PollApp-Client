{"ast":null,"code":"import axios from 'axios';\nconst url = 'http://localhost:3001/poll';\n\nclass PollService {\n  newPoll(data) {\n    const body = {\n      subject: data.subject,\n      password: data.password,\n      options: data.options,\n      expires: data.expires,\n      format: data.format\n    };\n    return axios.post(url + '/newpoll', body).then(res => {\n      return res.data;\n    }).catch(err => {\n      return err;\n    });\n  }\n\n  getPoll(id) {\n    return axios.get(url + '/' + id).then(res => {\n      return res.data;\n    }).catch(err => {\n      return err;\n    });\n  }\n\n}\n\nexport default new PollService();","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/poll.service.js"],"names":["axios","url","PollService","newPoll","data","body","subject","password","options","expires","format","post","then","res","catch","err","getPoll","id","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,GAAG,GAAG,4BAAZ;;AAEA,MAAMC,WAAN,CAAkB;AAEhBC,EAAAA,OAAO,CAACC,IAAD,EAAM;AACX,UAAMC,IAAI,GAAG;AAACC,MAAAA,OAAO,EAACF,IAAI,CAACE,OAAd;AAAsBC,MAAAA,QAAQ,EAACH,IAAI,CAACG,QAApC;AAA6CC,MAAAA,OAAO,EAACJ,IAAI,CAACI,OAA1D;AAAkEC,MAAAA,OAAO,EAACL,IAAI,CAACK,OAA/E;AAAuFC,MAAAA,MAAM,EAACN,IAAI,CAACM;AAAnG,KAAb;AACA,WAAOV,KAAK,CAACW,IAAN,CAAWV,GAAG,GAAG,UAAjB,EAA6BI,IAA7B,EAAmCO,IAAnC,CAAyCC,GAAD,IAAO;AACpD,aAAOA,GAAG,CAACT,IAAX;AACD,KAFM,EAEJU,KAFI,CAEGC,GAAD,IAAO;AACd,aAAOA,GAAP;AACD,KAJM,CAAP;AAKD;;AAEDC,EAAAA,OAAO,CAACC,EAAD,EAAI;AACT,WAAOjB,KAAK,CAACkB,GAAN,CAAUjB,GAAG,GAAG,GAAN,GAAYgB,EAAtB,EAA0BL,IAA1B,CAAgCC,GAAD,IAAO;AAC3C,aAAOA,GAAG,CAACT,IAAX;AACD,KAFM,EAEJU,KAFI,CAEGC,GAAD,IAAO;AACd,aAAOA,GAAP;AACD,KAJM,CAAP;AAKD;;AAjBe;;AAqBlB,eAAe,IAAIb,WAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\n\nconst url = 'http://localhost:3001/poll';\n\nclass PollService {\n\n  newPoll(data){\n    const body = {subject:data.subject,password:data.password,options:data.options,expires:data.expires,format:data.format};\n    return axios.post(url + '/newpoll', body).then((res)=>{\n      return res.data\n    }).catch((err)=>{\n      return err\n    })\n  }\n\n  getPoll(id){\n    return axios.get(url + '/' + id).then((res)=>{\n      return res.data\n    }).catch((err)=>{\n      return err\n    })\n  }\n\n}\n\nexport default new PollService();\n"]},"metadata":{},"sourceType":"module"}