{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PollForm(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [fields, setFields] = useState([]);\n  const [options, setOptionsTotal] = useState(0);\n  useEffect(() => {\n    type === 'newPoll' ? setFields([{\n      name: \"subject\",\n      label: \"Subject\",\n      type: \"text\"\n    }, {\n      name: \"author\",\n      label: \"Author\",\n      type: \"text\"\n    }, {\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\"\n    }, {\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      type: \"password\"\n    }, {\n      name: \"expires\",\n      label: \"Expires in...\",\n      type: \"time\"\n    }, {\n      name: \"format\",\n      label: \"Results Format\",\n      type: \"text\"\n    }]) : setFields([{\n      name: \"format\",\n      label: \"Results Format\",\n      type: \"text\"\n    }]);\n  }, []);\n  useEffect(() => {\n    if (options > 0) {\n      setFields([...fields, {\n        name: `option${options}`,\n        label: `Option ${options}`,\n        type: 'text'\n      }]);\n    }\n  }, [options]);\n\n  const increaseOptions = () => {\n    setOptionsTotal(options + 1);\n  };\n\n  const decreaseOptions = e => {\n    const name = e;\n    setOptionsTotal(options - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [type === 'newPoll' ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseOptions,\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 34\n    }, this) : '', fields.map(x => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        props: x,\n        decreaseOptions: decreaseOptions\n      }, x.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(PollForm, \"eYpXUHlXts1mVuRst2tw33rUpkE=\");\n\n_c = PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js"],"names":["useState","useEffect","Input","PollForm","type","fields","setFields","options","setOptionsTotal","name","label","increaseOptions","decreaseOptions","e","map","x"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAGA,eAAe,SAASC,QAAT,OAA2B;AAAA;;AAAA,MAAT;AAAEC,IAAAA;AAAF,GAAS;AACtC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBN,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACO,OAAD,EAASC,eAAT,IAA4BR,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,IAAI,KAAK,SAAT,GACIE,SAAS,CAAC,CACR;AAACG,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,KAAK,EAAE,SAAzB;AAAoCN,MAAAA,IAAI,EAAE;AAA1C,KADQ,EAER;AAACK,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,KAAK,EAAE,QAAxB;AAAkCN,MAAAA,IAAI,EAAE;AAAxC,KAFQ,EAGR;AAACK,MAAAA,IAAI,EAAE,UAAP;AAAmBC,MAAAA,KAAK,EAAE,UAA1B;AAAsCN,MAAAA,IAAI,EAAE;AAA5C,KAHQ,EAIR;AAACK,MAAAA,IAAI,EAAE,iBAAP;AAA0BC,MAAAA,KAAK,EAAE,kBAAjC;AAAqDN,MAAAA,IAAI,EAAE;AAA3D,KAJQ,EAKR;AAACK,MAAAA,IAAI,EAAE,SAAP;AAAkBC,MAAAA,KAAK,EAAE,eAAzB;AAA0CN,MAAAA,IAAI,EAAE;AAAhD,KALQ,EAMR;AAACK,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,KAAK,EAAE,gBAAxB;AAA0CN,MAAAA,IAAI,EAAE;AAAhD,KANQ,CAAD,CADb,GASIE,SAAS,CAAC,CAAC;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,KAAK,EAAE,gBAAxB;AAA0CN,MAAAA,IAAI,EAAE;AAAhD,KAAD,CAAD,CATb;AAUC,GAXM,EAWL,EAXK,CAAT;AAaAH,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGM,OAAO,GAAG,CAAb,EAAe;AACbD,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAW;AAACI,QAAAA,IAAI,EAAE,SAAQF,OAAQ,EAAvB;AAAyBG,QAAAA,KAAK,EAAG,UAASH,OAAQ,EAAlD;AAAqDH,QAAAA,IAAI,EAAE;AAA3D,OAAX,CAAD,CAAT;AACD;AACF,GAJQ,EAIP,CAACG,OAAD,CAJO,CAAT;;AAMA,QAAMI,eAAe,GAAG,MAAM;AAC5BH,IAAAA,eAAe,CAACD,OAAO,GAAG,CAAX,CAAf;AACD,GAFD;;AAGA,QAAMK,eAAe,GAAIC,CAAD,IAAO;AAC7B,UAAMJ,IAAI,GAAGI,CAAb;AACAL,IAAAA,eAAe,CAACD,OAAO,GAAG,CAAX,CAAf;AACD,GAHD;;AAKA,sBACE;AAAA,eACIH,IAAI,KAAK,SAAT,gBAAuB;AAAQ,MAAA,OAAO,EAAEO,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvB,GAA2E,EAD/E,EAEGN,MAAM,CAACS,GAAP,CAAWC,CAAC,IAAI;AACf,0BAAQ,QAAC,KAAD;AAAoB,QAAA,KAAK,EAAEA,CAA3B;AAA8B,QAAA,eAAe,EAAEH;AAA/C,SAAYG,CAAC,CAACN,IAAd;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFA,CAFH;AAAA,kBADF;AAQH;;GAvCuBN,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\n\n\nexport default function PollForm({ type }){\n    const [fields,setFields] = useState([]);\n    const [options,setOptionsTotal] = useState(0);\n\n    useEffect(()=>{\n      type === 'newPoll' ?\n          setFields([\n            {name: \"subject\", label: \"Subject\", type: \"text\" },\n            {name: \"author\", label: \"Author\", type: \"text\" },\n            {name: \"password\", label: \"Password\", type: \"password\" },\n            {name: \"confirmPassword\", label: \"Confirm Password\", type: \"password\" },\n            {name: \"expires\", label: \"Expires in...\", type: \"time\" },\n            {name: \"format\", label: \"Results Format\", type: \"text\" }])\n        :\n          setFields([{name: \"format\", label: \"Results Format\", type: \"text\" }])\n      },[])\n\n    useEffect(()=>{\n      if(options > 0){\n        setFields([...fields,{name:`option${options}`,label: `Option ${options}`, type: 'text'}])\n      }\n    },[options])\n\n    const increaseOptions = () => {\n      setOptionsTotal(options + 1)\n    }\n    const decreaseOptions = (e) => {\n      const name = e;\n      setOptionsTotal(options - 1)\n    }\n\n    return(\n      <>\n        { type === 'newPoll'  ?  <button onClick={increaseOptions}>Button</button> : ''}\n        {fields.map(x => {\n          return (<Input key={x.name} props={x} decreaseOptions={decreaseOptions} />)\n        })}\n      </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}