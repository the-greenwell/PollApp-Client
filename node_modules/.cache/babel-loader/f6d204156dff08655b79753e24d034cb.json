{"ast":null,"code":"var _jsxFileName = \"/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js\",\n    _s = $RefreshSig$();\n\nimport Select from './Select';\nimport Input from './Input';\nimport '../styles/form.css';\nimport { newPollFields, updatePollFields } from '../helpers.js';\nimport { useState, useEffect } from 'react';\nimport { useForm, useFieldArray } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PollForm(_ref) {\n  _s();\n\n  let {\n    type\n  } = _ref;\n  const [formFields, setFields] = useState([]);\n  const [options, setOptionsTotal] = useState(2);\n  const validationSchema = Yup.object().shape({\n    subject: Yup.string().required('\"Subject\" is required'),\n    password: Yup.string().required('\"Password\" is required').min(6, 'Password must be 6 characters').oneOf([Yup.ref('confirmPassword')], 'Passwords must match'),\n    confirmPassword: Yup.string().required('\"Confirm Password\" is required').oneOf([Yup.ref('password')], 'Passwords must match'),\n    format: Yup.string().default('default'),\n    expires: Yup.number().typeError('\"Expires\" must be a valid number').positive().integer().default(5),\n    options: Yup.array().of(Yup.object().shape({\n      description: Yup.string().typeError('\"Option\" invalid').trim()\n    }))\n  });\n  const formOptions = {\n    resolver: yupResolver(validationSchema)\n  };\n  const {\n    handleSubmit,\n    register,\n    control,\n    reset,\n    formState\n  } = useForm(formOptions);\n  const {\n    errors\n  } = formState;\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    name: 'options',\n    control\n  });\n  const [formErrors, setFormErrors] = useState({});\n  useEffect(() => {\n    setFormErrors(errors);\n  }, [errors]);\n  useEffect(() => {\n    type === 'newPoll' ? setFields(newPollFields) : setFields(updatePollFields);\n    setOptionsTotal(2);\n  }, []);\n  useEffect(() => {\n    const oldVal = fields.length;\n\n    if (options > oldVal && oldVal < 8 || oldVal < 2) {\n      for (let i = oldVal; i < options; i++) {\n        append({\n          description: ''\n        });\n      }\n    } else {\n      for (let i = oldVal; i > options; i--) {\n        remove(i - 1);\n      }\n    }\n  }, [options]);\n\n  const increaseOptions = e => {\n    e.preventDefault();\n    if (options < 8) setOptionsTotal(options + 1);\n  };\n\n  const decreaseOptions = e => {\n    e.preventDefault();\n    if (options > 2) setOptionsTotal(options - 1);\n  };\n\n  const onSubmit = data => {\n    var _data$options;\n\n    (_data$options = data.options) === null || _data$options === void 0 ? void 0 : _data$options.forEach(opt => {\n      return opt.description = opt.description.trim() ? opt.description : null;\n    });\n    const newData = {};\n    Object.entries(data.options).filter(_ref2 => {\n      let [, opt] = _ref2;\n      return opt !== null;\n    }).forEach(_ref3 => {\n      let [key, opt] = _ref3;\n      return newData[key] = opt;\n    });\n    console.log(newData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [type === 'newPoll' ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseOptions,\n        children: \"Add Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decreaseOptions,\n        children: \"Delete Option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this) : '', formFields.map(x => {\n      var _formErrors$x$name, _formErrors$x$name2;\n\n      return x.type === 'select' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          props: x,\n          register: register\n        }, x.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"is-invalid\",\n          children: (_formErrors$x$name = formErrors[x.name]) === null || _formErrors$x$name === void 0 ? void 0 : _formErrors$x$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          props: x,\n          register: register\n        }, x.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"is-invalid\",\n          children: (_formErrors$x$name2 = formErrors[x.name]) === null || _formErrors$x$name2 === void 0 ? void 0 : _formErrors$x$name2.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }), fields.map((x, i) => {\n      return /*#__PURE__*/_jsxDEV(Input, {\n        props: {\n          type: 'text',\n          focus: true,\n          name: `options.${i}.description`,\n          label: `Option ${i + 1}`\n        },\n        register: register\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PollForm, \"SY/o8ZUQhttDprUo4iwoQXsn8CA=\", false, function () {\n  return [useForm, useFieldArray];\n});\n\n_c = PollForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PollForm\");","map":{"version":3,"sources":["/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js"],"names":["Select","Input","newPollFields","updatePollFields","useState","useEffect","useForm","useFieldArray","yupResolver","Yup","PollForm","type","formFields","setFields","options","setOptionsTotal","validationSchema","object","shape","subject","string","required","password","min","oneOf","ref","confirmPassword","format","default","expires","number","typeError","positive","integer","array","of","description","trim","formOptions","resolver","handleSubmit","register","control","reset","formState","errors","fields","append","remove","name","formErrors","setFormErrors","oldVal","length","i","increaseOptions","e","preventDefault","decreaseOptions","onSubmit","data","forEach","opt","newData","Object","entries","filter","key","console","log","map","x","message","focus","label","id"],"mappings":"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","sourcesContent":["import Select from './Select'\nimport Input from './Input'\nimport '../styles/form.css'\nimport { newPollFields, updatePollFields } from '../helpers.js'\n\nimport { useState, useEffect } from 'react'\nimport { useForm, useFieldArray } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nexport default function PollForm({ type }){\n    const [formFields,setFields] = useState([]);\n    const [options,setOptionsTotal] = useState(2);\n\n    const validationSchema = Yup.object().shape({\n      subject: Yup.string().required('\"Subject\" is required'),\n      password: Yup.string().required('\"Password\" is required').min(6, 'Password must be 6 characters').oneOf([Yup.ref('confirmPassword')], 'Passwords must match'),\n      confirmPassword: Yup.string().required('\"Confirm Password\" is required').oneOf([Yup.ref('password')], 'Passwords must match'),\n      format: Yup.string().default('default'),\n      expires: Yup.number().typeError('\"Expires\" must be a valid number').positive().integer().default(5),\n      options: Yup.array().of(\n        Yup.object().shape({\n          description: Yup.string().typeError('\"Option\" invalid').trim()\n        })\n      )\n    });\n    const formOptions = {resolver: yupResolver(validationSchema)}\n\n    const {\n      handleSubmit,\n      register,\n      control,\n      reset,\n      formState\n    } = useForm(formOptions)\n\n    const { errors } = formState;\n\n    const { fields, append, remove } = useFieldArray({name: 'options', control})\n\n    const [formErrors, setFormErrors] = useState({})\n\n    useEffect(()=>{\n      setFormErrors(errors);\n    },[errors])\n\n    useEffect(()=>{\n      type === 'newPoll' ?\n          setFields(newPollFields) : setFields(updatePollFields);\n      setOptionsTotal(2);\n      },[])\n\n    useEffect(() => {\n       const oldVal = fields.length;\n       if (options > oldVal && oldVal < 8 || oldVal < 2) {\n           for (let i = oldVal; i < options; i++) {\n               append({description: ''});\n           }\n       } else {\n           for (let i = oldVal; i > options; i--) {\n               remove(i - 1);\n           }\n       }\n    }, [options]);\n\n    const increaseOptions = (e) => {\n      e.preventDefault();\n      if(options < 8) setOptionsTotal(options + 1)\n    }\n\n    const decreaseOptions = (e) => {\n      e.preventDefault();\n      if(options > 2) setOptionsTotal(options - 1)\n    }\n\n    const onSubmit = (data) => {\n      data.options?.forEach(opt => {\n        return opt.description = opt.description.trim() ? opt.description : null\n      })\n      const newData = {};\n      Object.entries(data.options).filter(([,opt]) => opt !== null).forEach(([key, opt]) => newData[key] = opt)\n      console.log(newData)\n    }\n\n    return(\n      <form className='form' onSubmit={handleSubmit(onSubmit)}>\n        { type === 'newPoll'  ?  (\n          <span>\n            <button onClick={increaseOptions}>Add Option</button>\n            <button onClick={decreaseOptions}>Delete Option</button>\n            <button type='submit'>Submit Form</button>\n          </span>\n        ) : ''}\n        {formFields.map(x => {\n          return (\n            x.type === 'select' ?\n              (<>\n                <Select\n                  key={x.name}\n                  props={x}\n                  register={register} />\n                <div className=\"is-invalid\">{formErrors[x.name]?.message}</div>\n              </>)\n            :\n            (<>\n              <Input\n                key={x.name}\n                props={x}\n                register={register}/>\n              <div className=\"is-invalid\">{formErrors[x.name]?.message}</div>\n            </>)\n          )\n        })}\n        {fields.map((x,i) => {\n          return (\n            <Input\n              key={x.id}\n              props={{\n                type: 'text',\n                focus: true,\n                name:`options.${i}.description`,\n                label: `Option ${i+1}`}}\n              register={register} />\n          )\n        })}\n      </form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}