[{"/Users/anthonyg/Desktop/vote_share/client/src/index.js":"1","/Users/anthonyg/Desktop/vote_share/client/src/App.js":"2","/Users/anthonyg/Desktop/vote_share/client/src/reportWebVitals.js":"3","/Users/anthonyg/Desktop/vote_share/client/src/containers/Navbar.js":"4","/Users/anthonyg/Desktop/vote_share/client/src/components/NavLink.js":"5","/Users/anthonyg/Desktop/vote_share/client/src/containers/HomeContainer.js":"6","/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js":"7","/Users/anthonyg/Desktop/vote_share/client/src/components/Input.js":"8","/Users/anthonyg/Desktop/vote_share/client/src/helpers.js":"9","/Users/anthonyg/Desktop/vote_share/client/src/components/Select.js":"10","/Users/anthonyg/Desktop/vote_share/client/src/containers/InfoContainer.js":"11","/Users/anthonyg/Desktop/vote_share/client/src/PollContext.js":"12","/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js":"13","/Users/anthonyg/Desktop/vote_share/client/src/poll.service.js":"14","/Users/anthonyg/Desktop/vote_share/client/src/components/Option.js":"15","/Users/anthonyg/Desktop/vote_share/client/src/components/ShareLink.js":"16","/Users/anthonyg/Desktop/vote_share/client/src/components/CountDown.js":"17","/Users/anthonyg/Desktop/vote_share/client/src/containers/ResultsContainer.js":"18"},{"size":588,"mtime":1649206515134,"results":"19","hashOfConfig":"20"},{"size":938,"mtime":1649309059335,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1647486647571,"results":"22","hashOfConfig":"20"},{"size":326,"mtime":1649206754544,"results":"23","hashOfConfig":"20"},{"size":170,"mtime":1649288424423,"results":"24","hashOfConfig":"20"},{"size":407,"mtime":1649206669203,"results":"25","hashOfConfig":"20"},{"size":4634,"mtime":1649734120124,"results":"26","hashOfConfig":"20"},{"size":302,"mtime":1649179732575,"results":"27","hashOfConfig":"20"},{"size":1144,"mtime":1649734120131,"results":"28","hashOfConfig":"20"},{"size":384,"mtime":1648853616604,"results":"29","hashOfConfig":"20"},{"size":133,"mtime":1647993906107,"results":"30","hashOfConfig":"20"},{"size":413,"mtime":1649734120119,"results":"31","hashOfConfig":"20"},{"size":2072,"mtime":1649734120128,"results":"32","hashOfConfig":"20"},{"size":702,"mtime":1649734120133,"results":"33","hashOfConfig":"20"},{"size":229,"mtime":1649293960283,"results":"34","hashOfConfig":"20"},{"size":320,"mtime":1649734120125,"results":"35","hashOfConfig":"20"},{"size":174,"mtime":1649734120121,"results":"36","hashOfConfig":"20"},{"size":1244,"mtime":1649734120130,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"srmgjc",{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},"/Users/anthonyg/Desktop/vote_share/client/src/index.js",[],[],["100","101"],"/Users/anthonyg/Desktop/vote_share/client/src/App.js",["102","103"],[],"import Navbar from './containers/Navbar'\nimport HomeContainer from './containers/HomeContainer'\nimport InfoContainer from './containers/InfoContainer'\nimport PollForm from './components/PollForm'\nimport PollContainer from './containers/PollContainer'\nimport ResultsContainer from './containers/ResultsContainer'\n\n\nimport {PollProvider} from './PollContext'\nimport './styles/global.css'\n\nimport { Router, Routes, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PollProvider>\n          <Navbar />\n            <Routes>\n              <Route path='/' element={<HomeContainer />} >\n                <Route path='newpoll' element={<PollForm />} />\n                <Route path='poll/:id' element={<PollContainer />} />\n                <Route path='results/:id' element={<ResultsContainer />} />\n              </Route>\n            </Routes>\n      </PollProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/anthonyg/Desktop/vote_share/client/src/reportWebVitals.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/containers/Navbar.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/components/NavLink.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/containers/HomeContainer.js",["104","105"],[],"\nimport React, { createContext, useState } from 'react'\n\nimport { Outlet } from 'react-router-dom'\n\nexport const FormContext = React.createContext()\n\nexport default function HomeContainer(){\n  const [formType, setFormType] = useState('newPoll')\n  return(\n    <div className='container'>\n      <FormContext.Provider value={{type: formType}}>\n        <Outlet />\n      </FormContext.Provider>\n    </div>\n  )\n}\n","/Users/anthonyg/Desktop/vote_share/client/src/components/PollForm.js",["106","107","108","109","110","111","112","113"],[],"import Select from './Select'\nimport Input from './Input'\nimport '../styles/form.css'\nimport { newPollFields, updatePollFields } from '../helpers.js'\nimport { FormContext } from '../containers/HomeContainer'\nimport { PollContext } from '../PollContext'\nimport PollService from '../poll.service.js'\n\nimport { useState, useEffect, useContext } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useForm, useFieldArray } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport moment from 'moment'\nimport * as Yup from 'yup';\n\nexport default function PollForm({ props }){\n    const [formFields,setFields] = useState([]);\n    const [options,setOptionsTotal] = useState(2);\n\n    const formProps = useContext(FormContext)\n    const [poll,setPoll] = useContext(PollContext).poll\n    const navigate = useNavigate();\n\n    const validationSchema = Yup.object().shape({\n      subject: Yup.string().required('\"Subject\" is required'),\n      password: Yup.string().required('\"Password\" is required').min(6, 'Password must be 6 characters').oneOf([Yup.ref('confirmPassword')], 'Passwords must match'),\n      confirmPassword: Yup.string().required('\"Confirm Password\" is required').oneOf([Yup.ref('password')], 'Passwords must match'),\n      format: Yup.string().default('default'),\n      expires: Yup.number().typeError('\"Expires\" must be a valid number').positive().integer().default(5),\n      options: Yup.array().of(\n        Yup.object().shape({\n          description: Yup.string().typeError('\"Option\" invalid').test('description', 'This field is required', (opt) => {\n            return opt.trim() ? true : false;\n          })\n        })\n      )\n    });\n    const formOptions = {resolver: yupResolver(validationSchema)}\n\n    const {\n      handleSubmit,\n      register,\n      control,\n      reset,\n      formState\n    } = useForm(formOptions)\n    const { errors } = formState;\n    const { fields, append, remove } = useFieldArray({name: 'options', control})\n\n\n    useEffect(()=>{\n      formProps.type === 'newPoll' ?\n          setFields(newPollFields) : setFields(updatePollFields);\n      setOptionsTotal(2);\n    },[])\n\n    useEffect(() => {\n       const oldVal = fields.length;\n       if (options > oldVal && oldVal < 8 || oldVal < 2) {\n           for (let i = oldVal; i < options; i++) {\n               append({description: ''});\n           }\n       } else {\n           for (let i = oldVal; i > options; i--) {\n               remove(i - 1);\n           }\n       }\n    }, [options]);\n\n    const increaseOptions = (e) => {\n      e.preventDefault();\n      if(options < 8) setOptionsTotal(options + 1)\n    }\n\n    const decreaseOptions = (e) => {\n      e.preventDefault();\n      if(options > 2) setOptionsTotal(options - 1)\n    }\n\n    const dateFormat = (minutes) => {\n      return moment().add(minutes, 'minutes').toDate()\n    }\n\n    const onSubmit = (data) => {\n      const formatted = {...data, expires: dateFormat(data.expires)}\n      PollService.newPoll(formatted).then(async (createdPoll) => {\n        setPoll(createdPoll.poll)\n        navigate('/poll/'+createdPoll.poll._id)\n      }).catch((err)=>{\n        console.log(err)\n        navigate('/newpoll')\n      })\n    }\n\n    return(\n      <form className='form' onSubmit={handleSubmit(onSubmit)}>\n        { formProps.type === 'newPoll'  ?  (\n          <span>\n            <button onClick={increaseOptions}>Add Option</button>\n            <button onClick={decreaseOptions}>Delete Option</button>\n            <button type='submit'>Submit Form</button>\n          </span>\n        ) : ''}\n        {formFields.map((x,i) => {\n          return (\n            x.type === 'select' ?\n              (\n                <>\n                <Select\n                  key={x.name}\n                  props={x}\n                  register={register} />\n                <div className=\"is-invalid\" key={`error-${i}`}>{errors[x.name]?.message}</div>\n                </>\n              )\n            :\n            (\n              <Input\n                key={x.name}\n                props={x}\n                register={register}/>\n            )\n          )\n        })}\n        {fields.map((x,i) => {\n          return (\n            <>\n              <Input\n                key={x.id}\n                props={{\n                  type: 'text',\n                  focus: true,\n                  name:`options.${i}.description`,\n                  label: `Option ${i+1}`}}\n                register={register} />\n              <div className=\"is-invalid\" key={`error-${i}`}>{errors.options?.[i]?.description?.message}</div>\n            </>\n          )\n        })}\n      </form>\n    )\n}\n","/Users/anthonyg/Desktop/vote_share/client/src/components/Input.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/helpers.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/components/Select.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/containers/InfoContainer.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/PollContext.js",["114"],[],"import React, { useState, createContext, useEffect } from 'react'\n\nexport const PollContext = createContext();\n\nexport const PollProvider = ({ children }) => {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [poll, setPoll] = useState({});\n\n  return(\n    <PollContext.Provider value={{loggedIn: [isLoggedIn, setLoggedIn], poll: [poll, setPoll]}}>\n      { children }\n    </PollContext.Provider>\n  )\n}\n","/Users/anthonyg/Desktop/vote_share/client/src/containers/PollContainer.js",["115","116","117","118","119","120"],[],"import { useState, useContext, useEffect } from 'react'\nimport { PollContext } from '../PollContext'\nimport PollService from '../poll.service.js'\nimport ShareLink from '../components/ShareLink'\nimport Option from '../components/Option'\nimport CountDown from '../components/CountDown'\nimport '../styles/poll.css'\nimport { useNavigate } from 'react-router-dom'\n\nimport { capitalize, formatTime } from '../helpers.js'\n\nimport moment from 'moment'\nimport { useParams } from 'react-router-dom'\n\nexport default function PollContainer(){\n  const { loggedIn, poll } = useContext(PollContext)\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const voteHandler = (optionId) => {\n    PollService.castVote(pollValue._id,optionId).then((data)=>{\n      setPollValue({...pollValue, options: data.updatedOptions});\n      navigate('/results/' + pollValue._id)\n    })\n  }\n  const formatCountdown = () => {\n    let diffTime = moment(pollValue.expires).valueOf() - moment().valueOf()\n    let duration = moment.duration(diffTime, 'milliseconds')\n    if(duration._milliseconds > 0) {\n      return {...formatTime(duration._milliseconds)}\n    }\n  }\n  const [timeLeft, setTimeLeft] = useState(formatCountdown());\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(formatCountdown());\n    }, 1000);\n    return () => clearTimeout(timer);\n  });\n\n  useEffect(()=>{\n    if(Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then((data) => {\n        setPollValue(data.poll)\n      })\n    }\n  },[])\n\n  return(\n    <div className='pollContainer'>\n      <h1> {pollValue.subject && capitalize(pollValue.subject)} </h1>\n\n      <CountDown props={timeLeft}/>\n\n      <div className='options'>\n        {pollValue?.options?.map(opt => {\n          return <Option key={opt._id} props={{option:opt,voteHandler:voteHandler}} />\n        })}\n      </div>\n\n      <ShareLink props={{shareLink: `${window.location.origin}/poll/${pollValue._id}`}}/>\n    </div>\n  )\n}\n","/Users/anthonyg/Desktop/vote_share/client/src/poll.service.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/components/Option.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/components/ShareLink.js",[],[],"/Users/anthonyg/Desktop/vote_share/client/src/components/CountDown.js",["121"],[],"export default function CountDown({ props }){\n  return(\n    <>\n      <p>{props ? `Expires in: ${props.hours}:${props.minutes}:${props.seconds}`: 'EXPIRED'}</p>\n    </>\n  )\n}\n","/Users/anthonyg/Desktop/vote_share/client/src/containers/ResultsContainer.js",["122","123","124","125","126"],[],"import { capitalize } from '../helpers.js'\nimport { PollContext } from '../PollContext'\nimport PollService from '../poll.service.js'\nimport ShareLink from '../components/ShareLink'\n\nimport { useEffect, useContext } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useNavigate } from 'react-router-dom'\n\nimport '../styles/poll.css'\n\nexport default function ResultsContainer(){\n  const { loggedIn, poll } = useContext(PollContext)\n  const [isLoggedIn, setLoggedIn] = loggedIn;\n  const [pollValue, setPollValue] = poll;\n\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(()=>{\n    console.log(pollValue)\n  },[pollValue])\n\n  useEffect(()=>{\n    if(Object.keys(pollValue).length === 0) {\n      PollService.getPoll(params.id).then((data) => {\n        navigate('/results/'+data.poll._id)\n      })\n    }\n  },[])\n\n  return(\n    <div className=\"pollContainer\">\n      <h1>{pollValue.subject && capitalize(pollValue.subject)}</h1>\n\n      <div className='options'>\n        {pollValue?.options?.map(opt => {\n          return <p key={opt._id}>{opt.description}: {opt.votes}</p>\n        })}\n      </div>\n\n      <ShareLink props={{shareLink: `${window.location.origin}/results/${pollValue._id}`}}/>\n    </div>\n  )\n}\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":21},{"ruleId":"131","severity":1,"message":"135","line":12,"column":10,"nodeType":"133","messageId":"134","endLine":12,"endColumn":16},{"ruleId":"131","severity":1,"message":"136","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":30},{"ruleId":"131","severity":1,"message":"137","line":9,"column":20,"nodeType":"133","messageId":"134","endLine":9,"endColumn":31},{"ruleId":"131","severity":1,"message":"138","line":21,"column":12,"nodeType":"133","messageId":"134","endLine":21,"endColumn":21},{"ruleId":"131","severity":1,"message":"139","line":22,"column":12,"nodeType":"133","messageId":"134","endLine":22,"endColumn":24},{"ruleId":"131","severity":1,"message":"140","line":22,"column":26,"nodeType":"133","messageId":"134","endLine":22,"endColumn":34},{"ruleId":"131","severity":1,"message":"141","line":45,"column":7,"nodeType":"133","messageId":"134","endLine":45,"endColumn":12},{"ruleId":"142","severity":1,"message":"143","line":56,"column":7,"nodeType":"144","endLine":56,"endColumn":9,"suggestions":"145"},{"ruleId":"146","severity":1,"message":"147","line":60,"column":29,"nodeType":"148","messageId":"149","endLine":60,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":60,"column":43,"nodeType":"148","messageId":"149","endLine":60,"endColumn":45},{"ruleId":"142","severity":1,"message":"150","line":69,"column":8,"nodeType":"144","endLine":69,"endColumn":17,"suggestions":"151"},{"ruleId":"131","severity":1,"message":"152","line":1,"column":42,"nodeType":"133","messageId":"134","endLine":1,"endColumn":51},{"ruleId":"131","severity":1,"message":"153","line":1,"column":10,"nodeType":"133","messageId":"134","endLine":1,"endColumn":18},{"ruleId":"131","severity":1,"message":"154","line":6,"column":22,"nodeType":"133","messageId":"134","endLine":6,"endColumn":32},{"ruleId":"131","severity":1,"message":"155","line":19,"column":10,"nodeType":"133","messageId":"134","endLine":19,"endColumn":20},{"ruleId":"131","severity":1,"message":"156","line":19,"column":22,"nodeType":"133","messageId":"134","endLine":19,"endColumn":33},{"ruleId":"131","severity":1,"message":"157","line":21,"column":10,"nodeType":"133","messageId":"134","endLine":21,"endColumn":21},{"ruleId":"142","severity":1,"message":"158","line":46,"column":5,"nodeType":"144","endLine":46,"endColumn":7,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":27,"column":5,"nodeType":"144","endLine":27,"endColumn":15,"suggestions":"161"},{"ruleId":"131","severity":1,"message":"155","line":16,"column":10,"nodeType":"133","messageId":"134","endLine":16,"endColumn":20},{"ruleId":"131","severity":1,"message":"156","line":16,"column":22,"nodeType":"133","messageId":"134","endLine":16,"endColumn":33},{"ruleId":"131","severity":1,"message":"157","line":18,"column":10,"nodeType":"133","messageId":"134","endLine":18,"endColumn":21},{"ruleId":"131","severity":1,"message":"162","line":18,"column":23,"nodeType":"133","messageId":"134","endLine":18,"endColumn":37},{"ruleId":"142","severity":1,"message":"163","line":31,"column":5,"nodeType":"144","endLine":31,"endColumn":7,"suggestions":"164"},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"no-unused-vars","'InfoContainer' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'createContext' is defined but never used.","'setFormType' is assigned a value but never used.","'pollValue' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'setError' is assigned a value but never used.","'reset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formProps.type'. Either include it or remove the dependency array.","ArrayExpression",["167"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has missing dependencies: 'append', 'fields.length', and 'remove'. Either include them or remove the dependency array.",["168"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'formatTime' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'votingError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id', 'pollValue', and 'setPollValue'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has a missing dependency: 'props.removeLS'. Either include it or remove the dependency array.",["170"],"'setVotingError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'navigate', 'params.id', 'pollValue', and 'setPollValue'. Either include them or remove the dependency array.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [formProps.type]",{"range":"182","text":"183"},"Update the dependencies array to be: [append, fields.length, options, remove]",{"range":"184","text":"185"},"Update the dependencies array to be: [params.id, pollValue, setPollValue]",{"range":"186","text":"187"},"Update the dependencies array to be: [props.removeLS, timeLeft]",{"range":"188","text":"189"},"Update the dependencies array to be: [navigate, params.id, pollValue, setPollValue]",{"range":"190","text":"191"},[2202,2204],"[formProps.type]",[2559,2568],"[append, fields.length, options, remove]",[1411,1413],"[params.id, pollValue, setPollValue]",[677,687],"[props.removeLS, timeLeft]",[978,980],"[navigate, params.id, pollValue, setPollValue]"]